target_sources(trait INTERFACE
  "${prefix}/shacl/trait/AdditionDefined.hpp"
  "${prefix}/shacl/trait/Arithmetic.hpp"
  "${prefix}/shacl/trait/Comparable.hpp"
  "${prefix}/shacl/trait/Compound.hpp"
  "${prefix}/shacl/trait/ConditionalApplication.hpp"
  "${prefix}/shacl/trait/Conjunction.hpp"
  "${prefix}/shacl/trait/DereferenceDefined.hpp"
  "${prefix}/shacl/trait/DereferenceResult.hpp"
  "${prefix}/shacl/trait/Disjunction.hpp"
  "${prefix}/shacl/trait/Difference.hpp"
  "${prefix}/shacl/trait/DivisionDefined.hpp"
  "${prefix}/shacl/trait/EqualityComparable.hpp"
  "${prefix}/shacl/trait/EqualityDefined.hpp"
  "${prefix}/shacl/trait/getterResult.hpp"
  "${prefix}/shacl/trait/GreaterThanDefined.hpp"
  "${prefix}/shacl/trait/GreaterThanEqualDefined.hpp"
  "${prefix}/shacl/trait/HasType.hpp"
  "${prefix}/shacl/trait/Identity.hpp"
  "${prefix}/shacl/trait/InequalityDefined.hpp"
  "${prefix}/shacl/trait/InvokeDefined.hpp"
  "${prefix}/shacl/trait/InvokeNoThrow.hpp"
  "${prefix}/shacl/trait/InvokeResult.hpp"
  "${prefix}/shacl/trait/IsInteger.hpp"
  "${prefix}/shacl/trait/IsRange.hpp"
  "${prefix}/shacl/trait/LessThanDefined.hpp"
  "${prefix}/shacl/trait/LessThanEqualDefined.hpp"
  "${prefix}/shacl/trait/MultiplicationDefined.hpp"
  "${prefix}/shacl/trait/Negate.hpp"
  "${prefix}/shacl/trait/Product.hpp"
  "${prefix}/shacl/trait/Quotient.hpp"
  "${prefix}/shacl/trait/RangeTraits.hpp"
  "${prefix}/shacl/trait/Scalable.hpp"
  "${prefix}/shacl/trait/SubtractionDefined.hpp"
  "${prefix}/shacl/trait/SubscriptDefined.hpp"
  "${prefix}/shacl/trait/SubscriptResult.hpp"
  "${prefix}/shacl/trait/Sum.hpp"
  "${prefix}/shacl/trait/Sum.hpp"
  "${prefix}/shacl/trait/SwapDefined.hpp"
  "${prefix}/shacl/trait/SwapNoThrow.hpp")

if(shacl.trait.tests)
  add_subdirectory(AdditionDefined/test)
  add_subdirectory(Arithmetic/test)
  add_subdirectory(Comparable/test)
  add_subdirectory(Compound/test)
  add_subdirectory(ConditionalApplication/test)
  add_subdirectory(Conjunction/test)
  add_subdirectory(DereferenceDefined/test)
  add_subdirectory(DereferenceResult/test)
  add_subdirectory(Difference/test)
  add_subdirectory(Disjunction/test)
  add_subdirectory(DivisionDefined/test)
  add_subdirectory(EqualityComparable/test)
  add_subdirectory(EqualityDefined/test)
  add_subdirectory(EqualityResult/test)
  add_subdirectory(getterResult/test)
  add_subdirectory(GreaterThanDefined/test)
  add_subdirectory(GreaterThanEqualDefined/test)
  add_subdirectory(GreaterThanResult/test)
  add_subdirectory(GreaterThanEqualResult/test)
  add_subdirectory(HasType/test)
  add_subdirectory(Identity/test)
  add_subdirectory(InequalityDefined/test)
  add_subdirectory(InequalityResult/test)
  add_subdirectory(InvokeDefined/test)
  add_subdirectory(InvokeNoThrow/test)
  add_subdirectory(InvokeResult/test)
  add_subdirectory(IsInteger/test)
  add_subdirectory(IsRange/test)
  add_subdirectory(LessThanDefined/test)
  add_subdirectory(LessThanEqualDefined/test)
  add_subdirectory(LessThanResult/test)
  add_subdirectory(LessThanEqualResult/test)
  add_subdirectory(MultiplicationDefined/test)
  add_subdirectory(Negate/test)
  add_subdirectory(Product/test)
  add_subdirectory(Quotient/test)
  add_subdirectory(RangeTraits/test)
  add_subdirectory(Scalable/test)
  add_subdirectory(SubtractionDefined/test)
  add_subdirectory(SubscriptDefined/test)
  add_subdirectory(SubscriptResult/test)
  add_subdirectory(Sum/test)
  add_subdirectory(SwapDefined/test)
  add_subdirectory(SwapNoThrow/test)
endif()
